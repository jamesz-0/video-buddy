{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/jameszhang/Code/jameszhang-0/video-buddy/src/app/page.tsx"],"sourcesContent":["'use client'\n\nimport Image from 'next/image'\nimport classNames from 'classnames'\nimport React, { ReactNode, useState } from 'react'\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css'\nimport { Value } from 'react-calendar/dist/esm/shared/types.js'\nimport './react-calendar-overrides.css'\nimport { CSSRuleObject } from 'tailwindcss/types/config'\n\ntype DynamicTag = React.ComponentType | keyof React.JSX.IntrinsicElements\n\ntype EventObj = React.SyntheticEvent<EventTarget>\n\ntype RenderProp = React.ReactNode\n\ninterface DynamicTagProps {\n  tag?: DynamicTag\n}\n\ninterface PropsWithClassName {\n  className?: string\n}\n\ninterface PropsWithChildren {\n  children?: React.ReactNode\n}\n\ninterface PropsWithInlineStyle {\n  style?: React.CSSProperties\n}\n\ninterface InvitationMeetingItem {\n  id: string\n  name: string\n  meetingName: string\n}\n\ninterface onRSVPFunction {\n  (e: EventObj, meetingItem: InvitationMeetingItem): void\n}\n\ninterface InvitationsDataObj {\n  content: Array<InvitationMeetingItem>\n  onRSVP: onRSVPFunction\n}\n\nconst sampleInvitationsData: InvitationsDataObj = {\n  content: [\n    {\n      id: 'h',\n      name: 'Samson',\n      meetingName: 'Q4 planning',\n    },\n    {\n      id: 'i',\n      name: 'Lena',\n      meetingName: 'Breakfast!!!!',\n    },\n    {\n      id: 'j',\n      name: 'Dominic',\n      meetingName: 'Brainstorming',\n    },\n  ],\n  onRSVP: (e: EventObj, meetingItem: InvitationMeetingItem) => {\n    alert('rsvp')\n  },\n}\n\ninterface AgendaTodayMeetingObj {\n  meetingID: string\n  meetingName: string\n  meetingTime: string\n}\n\ninterface onRescheduleFunction {\n  (e: EventObj, meetingItem: AgendaTodayMeetingObj): void\n}\n\ninterface onChangeAttendanceFunction {\n  (e: EventObj, meetingItem: AgendaTodayMeetingObj): void\n}\n\ninterface AgendaTodayDataType {\n  meetings: Array<AgendaTodayMeetingObj>\n  onReschedule: onRescheduleFunction\n  onChangeAttendance: onChangeAttendanceFunction\n}\n\nconst sampleAgendaTodayData: AgendaTodayDataType = {\n  meetings: [\n    {\n      meetingID: '1',\n      meetingName: 'Morning Standup',\n      meetingTime: '9:00 - 9:15',\n    },\n    {\n      meetingID: '2',\n      meetingName: 'Managers catch-up',\n      meetingTime: '10:00 - 10:30',\n    },\n    {\n      meetingID: '3',\n      meetingName: 'Ben 1:1',\n      meetingTime: '13:00 - 14:45',\n    },\n    {\n      meetingID: '4',\n      meetingName: 'KPI Clarification',\n      meetingTime: '15:00 - 15:30',\n    },\n  ],\n  onReschedule: (e, meetingItem) => {\n    alert('reschedule')\n  },\n  onChangeAttendance: (e, meetingItem) => {\n    alert('change attendance')\n  },\n}\n\ninterface InsightsDataObj {\n  meetingsHostedThisWeek: number\n  meetingsHostedLastWeek: number\n}\n\nconst sampleInsightsData: InsightsDataObj = {\n  meetingsHostedThisWeek: 8,\n  meetingsHostedLastWeek: 16,\n}\n\ninterface ContextObj {\n  data: Object\n  updateData: UpdateDataFunction\n}\n\ninterface UpdateDataFunction {\n  (changedData: ContextObj): void\n}\n\nexport const Context = React.createContext<ContextObj>({\n  data: [],\n  updateData: (changedData: ContextObj) => {},\n})\n\ninterface ContextProviderProps extends PropsWithChildren {\n  dataObj: ContextObj\n}\n\nfunction ContextProvider({ dataObj, children }: ContextProviderProps) {\n  const [modifiedData, setModifiedData] = useState(dataObj)\n\n  function updateData(changedData: ContextObj) {\n    setModifiedData(changedData)\n  }\n\n  const contextValue: ContextObj = {\n    data: modifiedData,\n    updateData,\n  }\n\n  return <Context.Provider value={contextValue}>{children}</Context.Provider>\n}\n\ninterface HeaderProps\n  extends React.DetailedHTMLProps<\n      React.HTMLAttributes<HTMLDivElement>,\n      HTMLDivElement\n    >,\n    PropsWithChildren {}\n\nconst Header: React.FC<HeaderProps> = ({ className, children, ...props }) => (\n  <div\n    className={`Header bg-blue-primary flex items-center gap-4 p-6 ${classNames(className)}`}\n    {...props}\n  >\n    {children}\n  </div>\n)\n\ninterface MainProps\n  extends React.DetailedHTMLProps<\n      React.HTMLAttributes<HTMLDivElement>,\n      HTMLDivElement\n    >,\n    PropsWithChildren {}\n\nconst Main: React.FC<MainProps> = ({\n  className,\n  children,\n  style,\n  ...props\n}) => (\n  <div\n    className={`Main bg-gray-50 grid gap-4 p-4 ${classNames(className)}`}\n    style={{\n      gridTemplate: `\n        'a a a a a a b b b b b b b c c c c c c' auto\n        'a a a a a a d d d d d e e e f f f f f' auto`,\n      ...style,\n    }}\n    {...props}\n  >\n    {children}\n  </div>\n)\n\ninterface PanelProps\n  extends React.HTMLAttributes<HTMLElement | SVGElement>,\n    PropsWithChildren,\n    DynamicTagProps {}\n\nconst Panel: React.FC<PanelProps> = ({\n  className,\n  children,\n  tag,\n  ...props\n}) => {\n  const Tag = tag ? tag : 'div'\n  return (\n    <Tag\n      className={`Panel bg-white p-6 border-2 border-gray-200 ${classNames(className)}`}\n      {...props}\n    >\n      {children}\n    </Tag>\n  )\n}\n\ninterface IconTextProps extends React.HTMLAttributes<HTMLElement | SVGElement> {\n  renderIcon: RenderProp\n  renderText: RenderProp\n}\n\nconst IconText: React.FC<IconTextProps> = ({\n  className,\n  renderIcon,\n  renderText,\n  ...props\n}) => (\n  <div\n    className={`IconText flex flex-row items-center ${classNames(className)}`}\n    {...props}\n  >\n    <div className=\"IconText-icon flex-shrink flex items-center mr-4 align-middle\">\n      {renderIcon}\n    </div>\n    <div className=\"IconText-text flex-auto align-middle align-middle\">\n      {renderText}\n    </div>\n  </div>\n)\n\ninterface DotProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {}\n\n/**\n * Dot expects bg-color and size to be passed through className.\n * Tailwind does not catch dynamic classNames.\n */\nconst Dot: React.FC<DotProps> = ({ className, ...props }) => {\n  return (\n    <div\n      className={`Dot rounded-full ${classNames(className)}`}\n      {...props}\n    ></div>\n  )\n}\n\ninterface ButtonProps\n  extends React.DetailedHTMLProps<\n      React.ButtonHTMLAttributes<HTMLButtonElement>,\n      HTMLButtonElement\n    >,\n    PropsWithChildren {\n  isSecondary?: boolean\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  className,\n  children,\n  isSecondary,\n  ...props\n}) => (\n  <button\n    className={`${classNames(\n      'Button',\n      isSecondary ? 'Button--secondary' : '',\n      className\n    )}`}\n    {...props}\n  >\n    {children}\n  </button>\n)\n\ninterface ImageWithPlaceholderProps extends PropsWithClassName {\n  size: number\n  src: string\n  alt: string\n}\n\nconst ImageWithPlaceholder: React.FC<ImageWithPlaceholderProps> = ({\n  className,\n  size,\n  src,\n  alt,\n}) => {\n  return src && alt ? (\n    <Image\n      className={`rounded-full ${className}`}\n      src={src}\n      width={size}\n      height={size}\n      alt={alt}\n    ></Image>\n  ) : (\n    <Dot className={`bg-gray-200 ${className}`} />\n  )\n}\n\ninterface InvitationAlertItemProps {\n  renderAvatar: RenderProp\n  renderText: RenderProp\n  renderButton: RenderProp\n}\n\nconst InvitationAlertItem: React.FC<InvitationAlertItemProps> = ({\n  renderAvatar,\n  renderText,\n  renderButton,\n}) => (\n  <div className=\"InvitationAlertItem flex items-center\">\n    <IconText\n      className=\"flex-1 mr-4\"\n      renderIcon={renderAvatar}\n      renderText={renderText}\n    />\n    {renderButton}\n  </div>\n)\n\ninterface AgendaTodayTableProps extends PropsWithClassName {\n  meetingData: AgendaTodayDataType\n}\n\nconst AgendaTodayTable: React.FC<AgendaTodayTableProps> = ({\n  className,\n  meetingData,\n}) => (\n  <div className={`${classNames('AgentToday', className)}`}>\n    <div className=\"table border-spacing-x-0 border-spacing-y-[16px] w-full\">\n      {meetingData.meetings.map((meetingItem) => {\n        return (\n          <div className=\"table-row\" key={meetingItem.meetingID}>\n            <div className=\"table-cell align-middle pr-2\">\n              {meetingItem.meetingName}\n            </div>\n            <div className=\"table-cell align-middle pr-2\">\n              {meetingItem.meetingTime}\n            </div>\n            <div className=\"table-cell text-right align-middle pr-2\">\n              <Button\n                onClick={(e: EventObj) => {\n                  meetingData.onReschedule(e, meetingItem)\n                }}\n              >\n                Reschedule\n              </Button>\n            </div>\n            <div className=\"table-cell text-right align-middle\">\n              <Button\n                isSecondary={true}\n                onClick={(e: EventObj) => {\n                  meetingData.onChangeAttendance(e, meetingItem)\n                }}\n              >\n                Change attendance\n              </Button>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  </div>\n)\n\ninterface InvitationsListProps extends PropsWithClassName {\n  invitationsData: InvitationsDataObj\n}\n\n/**\n * @param invitationsData expects to be in this\n * [{\n      id: String,\n      name: String,\n      meetingName: String,\n      onRSVP: Event Function\n    }]\n * }\n * @returns List of meeting data\n */\nconst InvitationsList: React.FC<InvitationsListProps> = ({\n  className,\n  invitationsData,\n}) => (\n  <div\n    className={`${classNames('InvitationsList', 'flex', 'flex-col', 'gap-4', 'py-20', className)}`}\n  >\n    {invitationsData.content.map((item) => (\n      <InvitationAlertItem\n        key={item.id}\n        renderAvatar={\n          <ImageWithPlaceholder\n            className=\"inline-block min-w-[24px]\"\n            alt=\"sample profile\"\n            size={24}\n            src=\"/sample-profile.jpg\"\n          />\n        }\n        renderText={\n          <p className=\"text-sm\">\n            {item.name} invited you to do{' '}\n            <span className=\"font-bold text-blue-primary\">\n              {item.meetingName}\n            </span>\n          </p>\n        }\n        renderButton={\n          <Button\n            className=\"px-12 height-fit\"\n            onClick={(e) => {\n              sampleInvitationsData.onRSVP(e, item)\n            }}\n          >\n            RSVP\n          </Button>\n        }\n      />\n    ))}\n  </div>\n)\n\ninterface InsightsDataProps extends PropsWithClassName {\n  insightsData: InsightsDataObj\n}\n\nconst InsightsData: React.FC<InsightsDataProps> = ({\n  className,\n  insightsData,\n}) => (\n  <div className={`${classNames('InsightsData', className)}`}>\n    <div className=\"table w-full border-spacing-x-0 border-spacing-y-[16px]\">\n      <div className=\"table-row\">\n        <div className=\"table-cell w-1/2 align-middle\">\n          Number of meetings you hosted this week\n        </div>\n        <div className=\"table-cell text-blue-primary text-5xl text-center align-middle\">\n          {insightsData.meetingsHostedThisWeek}\n        </div>\n      </div>\n      <div className=\"table-row\">\n        <div className=\"table-cell w-1/2 align-middle\">\n          Number of meetings you hosted last week\n        </div>\n        <div className=\"table-cell text-blue-primary text-5xl text-center align-middle\">\n          {insightsData.meetingsHostedLastWeek}\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport default function Home() {\n  const [value, onChange] = useState<Value>(new Date())\n  const [context, setContext] = useState({\n    data: [],\n    updateData: (changedData: ContextObj) => {},\n  })\n\n  return (\n    <ContextProvider dataObj={context}>\n      <div className=\"flex flex-col min-h-screen\">\n        <Header className=\"flex-none\">\n          <div className=\"LogoContainer\">\n            <Dot className=\"bg-white size-[32px]\" />\n          </div>\n          <div className=\"TitleContainer text-white flex font-bold text-xl\">\n            Video Buddy\n          </div>\n        </Header>\n        <Main className=\"flex-1\">\n          <Panel\n            className=\"NavPanel min-w-[240px] px-0 flex flex-col justify-between\"\n            style={{ gridArea: 'a' }}\n          >\n            <ul className=\"Nav\">\n              <a\n                className=\"NavLink NavLink--selected\"\n                aria-current=\"page\"\n                href=\"#\"\n              >\n                <li className=\"NavItem\">\n                  <IconText\n                    className=\"flex-1\"\n                    renderIcon={<Dot className=\"bg-gray-200 size-[24px]\" />}\n                    renderText=\"Home\"\n                  />\n                </li>\n              </a>\n              <a className=\"NavLink\" aria-current=\"page\" href=\"#\">\n                <li className=\"NavItem\">\n                  <IconText\n                    className=\"flex-1\"\n                    renderIcon={<Dot className=\"bg-gray-200 size-[24px]\" />}\n                    renderText=\"Calendar\"\n                  />\n                </li>\n              </a>\n              <a className=\"NavLink\" aria-current=\"page\" href=\"#\">\n                <li className=\"NavItem\">\n                  <IconText\n                    className=\"flex-1\"\n                    renderIcon={<Dot className=\"bg-gray-200 size-[24px]\" />}\n                    renderText=\"Recording\"\n                  />\n                </li>\n              </a>\n              <a className=\"NavLink\" aria-current=\"page\" href=\"#\">\n                <li className=\"NavItem\">\n                  <IconText\n                    className=\"flex-1\"\n                    renderIcon={<Dot className=\"bg-gray-200 size-[24px]\" />}\n                    renderText=\"Contacts\"\n                  />\n                </li>\n              </a>\n              <a className=\"NavLink\" aria-current=\"page\" href=\"#\">\n                <li className=\"NavItem\">\n                  <IconText\n                    className=\"flex-1\"\n                    renderIcon={<Dot className=\"bg-gray-200 size-[24px]\" />}\n                    renderText=\"Whiteboards\"\n                  />\n                </li>\n              </a>\n            </ul>\n            <a\n              className=\"NavLink NavLink--red mb-4\"\n              aria-current=\"page\"\n              href=\"#\"\n            >\n              <IconText\n                className=\"flex-1\"\n                renderIcon={<Dot className=\"bg-gray-200 size-[24px]\" />}\n                renderText=\"Log out\"\n              />\n            </a>\n          </Panel>\n          <Panel className=\"flex flex-col\" style={{ gridArea: 'b' }}>\n            <div className=\"flex-1 text-center\">\n              <h1 className=\"text-lg font-bold\">Good morning, John!</h1>\n              <ImageWithPlaceholder\n                className=\"inline-block\"\n                alt=\"sample profile\"\n                size={128}\n                src=\"/sample-profile.jpg\"\n              />\n            </div>\n            <h2 className=\"flex-none text-lg font-bold\">Your agenda today:</h2>\n            <AgendaTodayTable\n              className=\"flex-none\"\n              meetingData={sampleAgendaTodayData}\n            />\n          </Panel>\n          <div\n            style={{ gridArea: 'c' }}\n            className=\"grid grid-rows-[1fr_1fr_1fr] gap-4\"\n          >\n            <Panel\n              tag=\"button\"\n              className=\"flex flex-row items-center MeetingButton StartMeetingButton\"\n              onClick={() => alert('Start meeting')}\n            >\n              <IconText\n                className=\"flex-1 ml-12\"\n                renderIcon={<Dot className=\"bg-blue-primary size-[32px]\" />}\n                renderText={\n                  <h1 className=\"text-lg font-bold\">Start a meeting</h1>\n                }\n              />\n            </Panel>\n            <Panel\n              tag=\"button\"\n              className=\"flex flex-row items-center items-stretch MeetingButton JoinMeetingButton\"\n              onClick={() => alert('Join meeting')}\n            >\n              <IconText\n                className=\"flex-1 ml-12\"\n                renderIcon={<Dot className=\"bg-blue-primary size-[32px]\" />}\n                renderText={\n                  <h1 className=\"text-lg font-bold\">Join a meeting</h1>\n                }\n              />\n            </Panel>\n            <Panel\n              tag=\"button\"\n              className=\"flex flex-row items-center MeetingButton ScheduleMeetingButton\"\n              onClick={() => alert('Schedule meeting')}\n            >\n              <IconText\n                className=\"flex-1 ml-12\"\n                renderIcon={<Dot className=\"bg-blue-primary size-[32px]\" />}\n                renderText={\n                  <h1 className=\"text-lg font-bold\">Schedule a meeting</h1>\n                }\n              />\n            </Panel>\n          </div>\n          <Panel className=\"Calendar\" style={{ gridArea: 'd' }}>\n            <h1 className=\"text-lg font-bold\">Calendar</h1>\n            <Calendar\n              view=\"month\"\n              showFixedNumberOfWeeks={true}\n              onViewChange={(e) => {\n                // e.stopPropagation()\n                console.log(e)\n              }}\n              onChange={(value) => {\n                if (value) {\n                  onChange(value)\n                  alert(value)\n                }\n              }}\n              value={value}\n            />\n          </Panel>\n          <Panel className=\"Invitations\" style={{ gridArea: 'e' }}>\n            <h1 className=\"text-lg font-bold\">Invitations</h1>\n            <InvitationsList invitationsData={sampleInvitationsData} />\n          </Panel>\n          <Panel className=\"Insights flex flex-col\" style={{ gridArea: 'f' }}>\n            <h1 className=\"text-lg font-bold mb-2\">Insights</h1>\n            <InsightsData\n              className=\"flex-grow flex flex-col justify-center\"\n              insightsData={sampleInsightsData}\n            />\n          </Panel>\n        </Main>\n      </div>\n    </ContextProvider>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;;;AAgDA,MAAM,wBAA4C;IAChD,SAAS;QACP;YACE,IAAI;YACJ,MAAM;YACN,aAAa;QACf;QACA;YACE,IAAI;YACJ,MAAM;YACN,aAAa;QACf;QACA;YACE,IAAI;YACJ,MAAM;YACN,aAAa;QACf;KACD;IACD,QAAQ,CAAC,GAAa;QACpB,MAAM;IACR;AACF;AAsBA,MAAM,wBAA6C;IACjD,UAAU;QACR;YACE,WAAW;YACX,aAAa;YACb,aAAa;QACf;QACA;YACE,WAAW;YACX,aAAa;YACb,aAAa;QACf;QACA;YACE,WAAW;YACX,aAAa;YACb,aAAa;QACf;QACA;YACE,WAAW;YACX,aAAa;YACb,aAAa;QACf;KACD;IACD,cAAc,CAAC,GAAG;QAChB,MAAM;IACR;IACA,oBAAoB,CAAC,GAAG;QACtB,MAAM;IACR;AACF;AAOA,MAAM,qBAAsC;IAC1C,wBAAwB;IACxB,wBAAwB;AAC1B;AAWO,MAAM,wBAAU,qMAAA,CAAA,UAAK,CAAC,aAAa,CAAa;IACrD,MAAM,EAAE;IACR,YAAY,CAAC,eAA6B;AAC5C;AAMA,SAAS,gBAAgB,EAAE,OAAO,EAAE,QAAQ,EAAwB;IAClE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,SAAS,WAAW,WAAuB;QACzC,gBAAgB;IAClB;IAEA,MAAM,eAA2B;QAC/B,MAAM;QACN;IACF;IAEA,qBAAO,8OAAC,QAAQ,QAAQ;QAAC,OAAO;kBAAe;;;;;;AACjD;AASA,MAAM,SAAgC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,iBACtE,8OAAC;QACC,WAAW,CAAC,mDAAmD,EAAE,CAAA,GAAA,mIAAA,CAAA,UAAU,AAAD,EAAE,YAAY;QACvF,GAAG,KAAK;kBAER;;;;;;AAWL,MAAM,OAA4B,CAAC,EACjC,SAAS,EACT,QAAQ,EACR,KAAK,EACL,GAAG,OACJ,iBACC,8OAAC;QACC,WAAW,CAAC,+BAA+B,EAAE,CAAA,GAAA,mIAAA,CAAA,UAAU,AAAD,EAAE,YAAY;QACpE,OAAO;YACL,cAAc,CAAC;;oDAE+B,CAAC;YAC/C,GAAG,KAAK;QACV;QACC,GAAG,KAAK;kBAER;;;;;;AASL,MAAM,QAA8B,CAAC,EACnC,SAAS,EACT,QAAQ,EACR,GAAG,EACH,GAAG,OACJ;IACC,MAAM,MAAM,MAAM,MAAM;IACxB,qBACE,8OAAC;QACC,WAAW,CAAC,4CAA4C,EAAE,CAAA,GAAA,mIAAA,CAAA,UAAU,AAAD,EAAE,YAAY;QAChF,GAAG,KAAK;kBAER;;;;;;AAGP;AAOA,MAAM,WAAoC,CAAC,EACzC,SAAS,EACT,UAAU,EACV,UAAU,EACV,GAAG,OACJ,iBACC,8OAAC;QACC,WAAW,CAAC,oCAAoC,EAAE,CAAA,GAAA,mIAAA,CAAA,UAAU,AAAD,EAAE,YAAY;QACxE,GAAG,KAAK;;0BAET,8OAAC;gBAAI,WAAU;0BACZ;;;;;;0BAEH,8OAAC;gBAAI,WAAU;0BACZ;;;;;;;;;;;;AAWP;;;CAGC,GACD,MAAM,MAA0B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO;IACtD,qBACE,8OAAC;QACC,WAAW,CAAC,iBAAiB,EAAE,CAAA,GAAA,mIAAA,CAAA,UAAU,AAAD,EAAE,YAAY;QACrD,GAAG,KAAK;;;;;;AAGf;AAWA,MAAM,SAAgC,CAAC,EACrC,SAAS,EACT,QAAQ,EACR,WAAW,EACX,GAAG,OACJ,iBACC,8OAAC;QACC,WAAW,GAAG,CAAA,GAAA,mIAAA,CAAA,UAAU,AAAD,EACrB,UACA,cAAc,sBAAsB,IACpC,YACC;QACF,GAAG,KAAK;kBAER;;;;;;AAUL,MAAM,uBAA4D,CAAC,EACjE,SAAS,EACT,IAAI,EACJ,GAAG,EACH,GAAG,EACJ;IACC,OAAO,OAAO,oBACZ,8OAAC,6HAAA,CAAA,UAAK;QACJ,WAAW,CAAC,aAAa,EAAE,WAAW;QACtC,KAAK;QACL,OAAO;QACP,QAAQ;QACR,KAAK;;;;;6BAGP,8OAAC;QAAI,WAAW,CAAC,YAAY,EAAE,WAAW;;;;;;AAE9C;AAQA,MAAM,sBAA0D,CAAC,EAC/D,YAAY,EACZ,UAAU,EACV,YAAY,EACb,iBACC,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,WAAU;gBACV,YAAY;gBACZ,YAAY;;;;;;YAEb;;;;;;;AAQL,MAAM,mBAAoD,CAAC,EACzD,SAAS,EACT,WAAW,EACZ,iBACC,8OAAC;QAAI,WAAW,GAAG,CAAA,GAAA,mIAAA,CAAA,UAAU,AAAD,EAAE,cAAc,YAAY;kBACtD,cAAA,8OAAC;YAAI,WAAU;sBACZ,YAAY,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACzB,qBACE,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCACZ,YAAY,WAAW;;;;;;sCAE1B,8OAAC;4BAAI,WAAU;sCACZ,YAAY,WAAW;;;;;;sCAE1B,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCACC,SAAS,CAAC;oCACR,YAAY,YAAY,CAAC,GAAG;gCAC9B;0CACD;;;;;;;;;;;sCAIH,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCACC,aAAa;gCACb,SAAS,CAAC;oCACR,YAAY,kBAAkB,CAAC,GAAG;gCACpC;0CACD;;;;;;;;;;;;mBAtB2B,YAAY,SAAS;;;;;YA4BzD;;;;;;;;;;;AASN;;;;;;;;;;CAUC,GACD,MAAM,kBAAkD,CAAC,EACvD,SAAS,EACT,eAAe,EAChB,iBACC,8OAAC;QACC,WAAW,GAAG,CAAA,GAAA,mIAAA,CAAA,UAAU,AAAD,EAAE,mBAAmB,QAAQ,YAAY,SAAS,SAAS,YAAY;kBAE7F,gBAAgB,OAAO,CAAC,GAAG,CAAC,CAAC,qBAC5B,8OAAC;gBAEC,4BACE,8OAAC;oBACC,WAAU;oBACV,KAAI;oBACJ,MAAM;oBACN,KAAI;;;;;;gBAGR,0BACE,8OAAC;oBAAE,WAAU;;wBACV,KAAK,IAAI;wBAAC;wBAAmB;sCAC9B,8OAAC;4BAAK,WAAU;sCACb,KAAK,WAAW;;;;;;;;;;;;gBAIvB,4BACE,8OAAC;oBACC,WAAU;oBACV,SAAS,CAAC;wBACR,sBAAsB,MAAM,CAAC,GAAG;oBAClC;8BACD;;;;;;eAvBE,KAAK,EAAE;;;;;;;;;;AAoCpB,MAAM,eAA4C,CAAC,EACjD,SAAS,EACT,YAAY,EACb,iBACC,8OAAC;QAAI,WAAW,GAAG,CAAA,GAAA,mIAAA,CAAA,UAAU,AAAD,EAAE,gBAAgB,YAAY;kBACxD,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCAAgC;;;;;;sCAG/C,8OAAC;4BAAI,WAAU;sCACZ,aAAa,sBAAsB;;;;;;;;;;;;8BAGxC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCAAgC;;;;;;sCAG/C,8OAAC;4BAAI,WAAU;sCACZ,aAAa,sBAAsB;;;;;;;;;;;;;;;;;;;;;;;AAO/B,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,IAAI;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACrC,MAAM,EAAE;QACR,YAAY,CAAC,eAA6B;IAC5C;IAEA,qBACE,8OAAC;QAAgB,SAAS;kBACxB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAO,WAAU;;sCAChB,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;;;;;;;;;;sCAEjB,8OAAC;4BAAI,WAAU;sCAAmD;;;;;;;;;;;;8BAIpE,8OAAC;oBAAK,WAAU;;sCACd,8OAAC;4BACC,WAAU;4BACV,OAAO;gCAAE,UAAU;4BAAI;;8CAEvB,8OAAC;oCAAG,WAAU;;sDACZ,8OAAC;4CACC,WAAU;4CACV,gBAAa;4CACb,MAAK;sDAEL,cAAA,8OAAC;gDAAG,WAAU;0DACZ,cAAA,8OAAC;oDACC,WAAU;oDACV,0BAAY,8OAAC;wDAAI,WAAU;;;;;;oDAC3B,YAAW;;;;;;;;;;;;;;;;sDAIjB,8OAAC;4CAAE,WAAU;4CAAU,gBAAa;4CAAO,MAAK;sDAC9C,cAAA,8OAAC;gDAAG,WAAU;0DACZ,cAAA,8OAAC;oDACC,WAAU;oDACV,0BAAY,8OAAC;wDAAI,WAAU;;;;;;oDAC3B,YAAW;;;;;;;;;;;;;;;;sDAIjB,8OAAC;4CAAE,WAAU;4CAAU,gBAAa;4CAAO,MAAK;sDAC9C,cAAA,8OAAC;gDAAG,WAAU;0DACZ,cAAA,8OAAC;oDACC,WAAU;oDACV,0BAAY,8OAAC;wDAAI,WAAU;;;;;;oDAC3B,YAAW;;;;;;;;;;;;;;;;sDAIjB,8OAAC;4CAAE,WAAU;4CAAU,gBAAa;4CAAO,MAAK;sDAC9C,cAAA,8OAAC;gDAAG,WAAU;0DACZ,cAAA,8OAAC;oDACC,WAAU;oDACV,0BAAY,8OAAC;wDAAI,WAAU;;;;;;oDAC3B,YAAW;;;;;;;;;;;;;;;;sDAIjB,8OAAC;4CAAE,WAAU;4CAAU,gBAAa;4CAAO,MAAK;sDAC9C,cAAA,8OAAC;gDAAG,WAAU;0DACZ,cAAA,8OAAC;oDACC,WAAU;oDACV,0BAAY,8OAAC;wDAAI,WAAU;;;;;;oDAC3B,YAAW;;;;;;;;;;;;;;;;;;;;;;8CAKnB,8OAAC;oCACC,WAAU;oCACV,gBAAa;oCACb,MAAK;8CAEL,cAAA,8OAAC;wCACC,WAAU;wCACV,0BAAY,8OAAC;4CAAI,WAAU;;;;;;wCAC3B,YAAW;;;;;;;;;;;;;;;;;sCAIjB,8OAAC;4BAAM,WAAU;4BAAgB,OAAO;gCAAE,UAAU;4BAAI;;8CACtD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAAoB;;;;;;sDAClC,8OAAC;4CACC,WAAU;4CACV,KAAI;4CACJ,MAAM;4CACN,KAAI;;;;;;;;;;;;8CAGR,8OAAC;oCAAG,WAAU;8CAA8B;;;;;;8CAC5C,8OAAC;oCACC,WAAU;oCACV,aAAa;;;;;;;;;;;;sCAGjB,8OAAC;4BACC,OAAO;gCAAE,UAAU;4BAAI;4BACvB,WAAU;;8CAEV,8OAAC;oCACC,KAAI;oCACJ,WAAU;oCACV,SAAS,IAAM,MAAM;8CAErB,cAAA,8OAAC;wCACC,WAAU;wCACV,0BAAY,8OAAC;4CAAI,WAAU;;;;;;wCAC3B,0BACE,8OAAC;4CAAG,WAAU;sDAAoB;;;;;;;;;;;;;;;;8CAIxC,8OAAC;oCACC,KAAI;oCACJ,WAAU;oCACV,SAAS,IAAM,MAAM;8CAErB,cAAA,8OAAC;wCACC,WAAU;wCACV,0BAAY,8OAAC;4CAAI,WAAU;;;;;;wCAC3B,0BACE,8OAAC;4CAAG,WAAU;sDAAoB;;;;;;;;;;;;;;;;8CAIxC,8OAAC;oCACC,KAAI;oCACJ,WAAU;oCACV,SAAS,IAAM,MAAM;8CAErB,cAAA,8OAAC;wCACC,WAAU;wCACV,0BAAY,8OAAC;4CAAI,WAAU;;;;;;wCAC3B,0BACE,8OAAC;4CAAG,WAAU;sDAAoB;;;;;;;;;;;;;;;;;;;;;;sCAK1C,8OAAC;4BAAM,WAAU;4BAAW,OAAO;gCAAE,UAAU;4BAAI;;8CACjD,8OAAC;oCAAG,WAAU;8CAAoB;;;;;;8CAClC,8OAAC,yKAAA,CAAA,UAAQ;oCACP,MAAK;oCACL,wBAAwB;oCACxB,cAAc,CAAC;wCACb,sBAAsB;wCACtB,QAAQ,GAAG,CAAC;oCACd;oCACA,UAAU,CAAC;wCACT,IAAI,OAAO;4CACT,SAAS;4CACT,MAAM;wCACR;oCACF;oCACA,OAAO;;;;;;;;;;;;sCAGX,8OAAC;4BAAM,WAAU;4BAAc,OAAO;gCAAE,UAAU;4BAAI;;8CACpD,8OAAC;oCAAG,WAAU;8CAAoB;;;;;;8CAClC,8OAAC;oCAAgB,iBAAiB;;;;;;;;;;;;sCAEpC,8OAAC;4BAAM,WAAU;4BAAyB,OAAO;gCAAE,UAAU;4BAAI;;8CAC/D,8OAAC;oCAAG,WAAU;8CAAyB;;;;;;8CACvC,8OAAC;oCACC,WAAU;oCACV,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO5B","debugId":null}}]
}